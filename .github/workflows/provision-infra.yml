name: Create AKS Cluster

on:
  workflow_dispatch:
    inputs:
      resource-group-name:
        description: 'Azure Resource Group Name'
        required: true
      aks-cluster-name:
        description: 'Azure AKS Cluster Name'
        required: true

jobs:
  create-aks-cluster:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      run: |
        az group create --name ${{ github.event.inputs.resource-group-name }} --location eastus
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create AKS Cluster
      run: |
        az provider register --namespace Microsoft.Network
        az aks create --resource-group ${{ github.event.inputs.resource-group-name }} --name ${{ github.event.inputs.aks-cluster-name }} --node-count 1 --generate-ssh-keys
        az aks get-credentials --resource-group ${{ github.event.inputs.resource-group-name }} --name ${{ github.event.inputs.aks-cluster-name }}
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy NGINX Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Wait for Ingress Controller Deployment
      run: kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=300s
    
    - name: Expose Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/service-l4.yaml
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Wait for LoadBalancer IP
      run: |
        ip=""
        while [ -z $ip ]; do
          echo "Waiting for LoadBalancer IP..."
          ip=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          [ -z $ip ] && sleep 10
        done
        echo "LoadBalancer IP: $ip"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure Ingress
      run: |
        # Add your Ingress resource configuration here (e.g., deploy your Ingress YAML files)
        # Example: kubectl apply -f path/to/your/ingress.yaml
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        LOAD_BALANCER_IP: $ip
